/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.sistema.view;

import com.pos.core.Validaciones;
import com.pos.dao.clienteDao;
import com.pos.pojos.Cliente;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Reynaldo
 */
public class vtnCliente extends javax.swing.JInternalFrame {

    /**
     * Creates new form vtnCliente
     */
    public static String validaVentana;//variable que realiza la validacion de ventana abierta
    private Cliente ObjCliente;

    public vtnCliente() {
        initComponents();
        validaVentana = "x";//insertando un valor a la variable que valida a la ventana
     /*Poniendo el JinternalFrame al centro de la ventana*/
        int a = vtnPrincipal.panelMDI.getWidth() - this.getWidth();
        int b = vtnPrincipal.panelMDI.getHeight() - this.getHeight();
        setLocation(a / 2, b / 2);

        //validacion de campos
        Validaciones.validaNumeros(txtFono);
        Validaciones.validaNumeros(txtNit);
        Validaciones.validaNumeros(txtCelular);
        Validaciones.validaNumeros(txtPlazoCredito);
        txtPlazoCredito.setEnabled(false);
        //Fin validacion 

        listarClientes();
        btnGuardarU.setEnabled(false);
    }

    public void listarClientes() {
        try {
            DefaultTableModel modelo = (DefaultTableModel) this.tablaClientes.getModel();//creando el modela ára llenar los datos al JTableje
            Validaciones.limpiarTabla(tablaClientes);
            //realizando la consulta para realizar el listado de los datos
            clienteDao pgDao = new clienteDao();
            List<Cliente> lista = pgDao.listarClientes();
            Object[] fila = new Object[modelo.getColumnCount()];
            for (int i = 0; i < lista.size(); i++) {
                fila[0] = lista.get(i).getIdCliente();
                fila[1] = lista.get(i).getNombre();
                fila[2] = lista.get(i).getCi();
                fila[3] = lista.get(i).getCredito();
                fila[4] = lista.get(i).getPlazo();
                fila[5] = lista.get(i).getTelefono();
                fila[6] = lista.get(i).getCelContacto();
                fila[7] = lista.get(i).getEmail();
                fila[8] = lista.get(i).getDireccion();
                fila[9] = lista.get(i).getEstado();

                modelo.addRow(fila);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error " + e, null, JOptionPane.ERROR_MESSAGE);
        }
    }
//Metodo que bloquea los campos de texto

    public void bloquearCamposFormulario() {
        txtNombreCliente.setEnabled(false);
        txtNit.setEnabled(false);
        txtFono.setEnabled(false);
        txtCelular.setEnabled(false);
        txtEmail.setEnabled(false);
        comboCredito.setEnabled(false);
        txtDireccion.setEnabled(false);
        txtPlazoCredito.setEnabled(false);
        btnGuardarU.setEnabled(false);
        //--------fin botones de accion---
    }

    public void limpiarCampos() {
        txtNombreCliente.setText("");
        txtNit.setText("");
        txtFono.setText("");
        txtCelular.setText("");
        txtEmail.setText("");
        txtDireccion.setText("");
        comboCredito.setSelectedIndex(0);
        txtPlazoCredito.setText("0");
        comboEstado.setSelectedIndex(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel13 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        txtNombreCliente = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txtNit = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        txtFono = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        txtCelular = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        txtDireccion = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        btnNuevoU = new javax.swing.JToggleButton();
        btnGuardarU = new javax.swing.JButton();
        btnActU = new javax.swing.JButton();
        btnEliminarU = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaClientes = new javax.swing.JTable();
        jLabel23 = new javax.swing.JLabel();
        comboCredito = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        txtPlazoCredito = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        comboEstado = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        labelUsuario1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setTitle("Clientes..::..::..");
        setToolTipText("");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos del cliente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Century Gothic", 1, 14))); // NOI18N

        jLabel17.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        jLabel17.setText(" * Nombre");

        txtNombreCliente.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        txtNombreCliente.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtNombreCliente.setToolTipText("Campo obligatorio..!!");

        jLabel18.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        jLabel18.setText("* CI/NIT:");

        txtNit.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        txtNit.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtNit.setToolTipText("Campo obligatorio..!!");

        jLabel19.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        jLabel19.setText("Teléfono:");

        txtFono.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        txtFono.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel20.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        jLabel20.setText("Celular:");

        txtCelular.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        txtCelular.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel21.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        jLabel21.setText("Dirección:");

        txtEmail.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        txtEmail.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel22.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        jLabel22.setText("Email:");

        txtDireccion.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        txtDireccion.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnNuevoU.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        btnNuevoU.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/pos/iconos/agregar.png"))); // NOI18N
        btnNuevoU.setText("Nuevo");
        btnNuevoU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoUActionPerformed(evt);
            }
        });

        btnGuardarU.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        btnGuardarU.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/pos/iconos/guardar.png"))); // NOI18N
        btnGuardarU.setText("Guardar");
        btnGuardarU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarUActionPerformed(evt);
            }
        });

        btnActU.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        btnActU.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/pos/iconos/modificar.png"))); // NOI18N
        btnActU.setText("Actualizar");
        btnActU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActUActionPerformed(evt);
            }
        });

        btnEliminarU.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        btnEliminarU.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/pos/iconos/delete.png"))); // NOI18N
        btnEliminarU.setText("Eliminar");
        btnEliminarU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarUActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnNuevoU, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnGuardarU, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEliminarU, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnActU, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNuevoU, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnGuardarU)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnActU)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEliminarU)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Listado de clientes", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Century Gothic", 1, 14))); // NOI18N

        tablaClientes.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        tablaClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NOMBRE", "CI/NIT", "CREDITO", "PLAZO", "TELEFONO", "CELULAR", "EMAIL", "DIRECCION", "ESTADO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tablaClientesMousePressed(evt);
            }
        });
        jScrollPane3.setViewportView(tablaClientes);
        if (tablaClientes.getColumnModel().getColumnCount() > 0) {
            tablaClientes.getColumnModel().getColumn(0).setMinWidth(20);
            tablaClientes.getColumnModel().getColumn(0).setPreferredWidth(20);
            tablaClientes.getColumnModel().getColumn(0).setMaxWidth(25);
            tablaClientes.getColumnModel().getColumn(1).setResizable(false);
            tablaClientes.getColumnModel().getColumn(2).setResizable(false);
            tablaClientes.getColumnModel().getColumn(3).setResizable(false);
            tablaClientes.getColumnModel().getColumn(4).setResizable(false);
            tablaClientes.getColumnModel().getColumn(5).setResizable(false);
            tablaClientes.getColumnModel().getColumn(6).setResizable(false);
            tablaClientes.getColumnModel().getColumn(7).setResizable(false);
            tablaClientes.getColumnModel().getColumn(8).setResizable(false);
            tablaClientes.getColumnModel().getColumn(9).setResizable(false);
        }

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                .addGap(5, 5, 5))
        );

        jLabel23.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        jLabel23.setText("Credito:");

        comboCredito.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        comboCredito.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---------", "SI", "NO" }));
        comboCredito.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboCreditoItemStateChanged(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        jLabel5.setText("Plazo (Dias):");

        txtPlazoCredito.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        txtPlazoCredito.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPlazoCredito.setText("0");
        txtPlazoCredito.setToolTipText("Plazo de credito en días");

        jLabel6.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        jLabel6.setText("Estado:");

        comboEstado.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        comboEstado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Activo", "Inactivo" }));

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel13Layout.createSequentialGroup()
                                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel17)
                                    .addComponent(jLabel18)
                                    .addComponent(jLabel19)
                                    .addComponent(jLabel20)
                                    .addComponent(jLabel22))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNit)
                                    .addComponent(txtFono)
                                    .addComponent(txtCelular)
                                    .addComponent(txtNombreCliente)
                                    .addComponent(txtEmail)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel13Layout.createSequentialGroup()
                                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel21)
                                    .addComponent(jLabel23))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtDireccion)
                                    .addGroup(jPanel13Layout.createSequentialGroup()
                                        .addComponent(comboCredito, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtPlazoCredito, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addGap(0, 26, Short.MAX_VALUE)
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboEstado, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(40, 40, 40))))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(txtNombreCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(txtNit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19)
                            .addComponent(txtFono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(txtCelular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21)))
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel23)
                    .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(comboCredito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)
                        .addComponent(txtPlazoCredito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6)
                        .addComponent(comboEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(11, 58, 126));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        labelUsuario1.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        labelUsuario1.setForeground(new java.awt.Color(255, 255, 255));
        labelUsuario1.setText("CLIENTES");

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/pos/iconos/client.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(530, 530, 530))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(147, 147, 147)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(labelUsuario1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labelUsuario1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jLabel3)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tablaClientesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaClientesMousePressed
        // TODO add your handling code here:
        DefaultTableModel tm = (DefaultTableModel) tablaClientes.getModel();
        String dato = String.valueOf(tm.getValueAt(tablaClientes.getSelectedRow(), 0));
        clienteDao pgDao = new clienteDao();
        try {
            Cliente pg = new Cliente();
            this.setObjCliente(pg);//insertando el
            pg.setIdCliente(Integer.parseInt(dato));
            pg.setNombre(String.valueOf(tm.getValueAt(tablaClientes.getSelectedRow(), 1)));
            pg.setCi(String.valueOf(tm.getValueAt(tablaClientes.getSelectedRow(), 2)));
            pg.setTelefono(String.valueOf(tm.getValueAt(tablaClientes.getSelectedRow(), 5)));
            pg.setCelContacto(String.valueOf(tm.getValueAt(tablaClientes.getSelectedRow(), 6)));
            pg.setEmail(String.valueOf(tm.getValueAt(tablaClientes.getSelectedRow(), 7)));
            pg.setDireccion(String.valueOf(tm.getValueAt(tablaClientes.getSelectedRow(), 8)));
            pg.setCredito(String.valueOf(tm.getValueAt(tablaClientes.getSelectedRow(), 3)));
            pg.setPlazo(String.valueOf(tm.getValueAt(tablaClientes.getSelectedRow(), 4)));
            pg.setEstado(String.valueOf(tm.getValueAt(tablaClientes.getSelectedRow(), 9)));

            this.setObjCliente(ObjCliente);

            txtNombreCliente.setText(pg.getNombre());
            txtNit.setText(pg.getCi());
            txtFono.setText(pg.getTelefono());
            txtCelular.setText(pg.getCelContacto());
            txtEmail.setText(pg.getEmail());
            txtDireccion.setText(pg.getDireccion());
            comboCredito.setSelectedItem(pg.getCredito());
            txtPlazoCredito.setText(pg.getPlazo());
            comboEstado.setSelectedItem(pg.getEstado());

            //JOptionPane.showMessageDialog(null, "Precionado" + cat.getNombre());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error" + ex.getMessage(), "Mensaje..::..", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_tablaClientesMousePressed

    private void btnGuardarUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarUActionPerformed
        // TODO add your handling code here:
        try {

            //Validacion de los campos de formulario
            if (txtNombreCliente.getText().length() == 0) {
                JOptionPane.showMessageDialog(null, "Ingrese el nombre del cliente", "Mensaje..::..", JOptionPane.ERROR_MESSAGE);
                txtNombreCliente.requestFocusInWindow();
                return;
            }
            if (txtNit.getText().length() == 0) {
                JOptionPane.showMessageDialog(null, "Ingrese el CI o NIT del cliente..!!", "Mensaje..::..", JOptionPane.ERROR_MESSAGE);
                txtNit.requestFocusInWindow();
                return;
            }

            if (comboCredito.getSelectedIndex() > 0) {
                if (comboCredito.getSelectedItem().equals("SI")) {
                    if (txtPlazoCredito.getText().length() > 0) {
                        if (Integer.parseInt(txtPlazoCredito.getText()) > 0) {
                            //REGISTRO DE LOS DATOS
                            clienteDao cliDao = new clienteDao();

                            Cliente cli = new Cliente();
                            cli.setNombre(txtNombreCliente.getText());//nombre cliente
                            cli.setCi(txtNit.getText());//ci/Nit del cliente
                            cli.setTelefono(txtFono.getText());//telefono
                            cli.setCelContacto(txtCelular.getText());//celular
                            cli.setEmail(txtEmail.getText());//email
                            cli.setDireccion(txtDireccion.getText());//direccion
                            cli.setCredito(comboCredito.getSelectedItem().toString());//credito
                            cli.setPlazo(txtPlazoCredito.getText());
                            cli.setEstado(comboEstado.getSelectedItem().toString());

                            if (cliDao.registarCliente(cli)) {
                                JOptionPane.showMessageDialog(this, "Registro de cliente correcto..", "Satisfactorio", JOptionPane.INFORMATION_MESSAGE);
                                txtNombreCliente.setText("");
                                txtNit.setText("");
                                txtFono.setText("");
                                txtCelular.setText("");
                                txtEmail.setText("");
                                txtDireccion.setText("");
                                comboCredito.setSelectedIndex(0);
                                txtPlazoCredito.setText("0");

                                btnGuardarU.setEnabled(false);
                                btnActU.setEnabled(true);
                                btnEliminarU.setEnabled(true);
                                btnNuevoU.setText("Nuevo");

                                listarClientes();
                            }

                        } else {
                            JOptionPane.showMessageDialog(null, "El plazo no puede ser cero", "Mensaje..::..", JOptionPane.ERROR_MESSAGE);
                        }

                    } else {
                        JOptionPane.showMessageDialog(null, "Ingrese el campo plazo de credito..!!", "Mensaje..::..", JOptionPane.ERROR_MESSAGE);
                    }

                } else {
                    //REGISTRO CUANDO NO TIENE CREDITO
                    clienteDao cliDao = new clienteDao();

                    Cliente cli = new Cliente();
                    cli.setNombre(txtNombreCliente.getText());//nombre cliente
                    cli.setCi(txtNit.getText());//ci/Nit del cliente
                    cli.setTelefono(txtFono.getText());//telefono
                    cli.setCelContacto(txtCelular.getText());//celular
                    cli.setEmail(txtEmail.getText());//email
                    cli.setDireccion(txtDireccion.getText());//direccion
                    cli.setCredito(comboCredito.getSelectedItem().toString());//credito
                    cli.setPlazo(txtPlazoCredito.getText());
                    cli.setEstado(comboEstado.getSelectedItem().toString());

                    if (cliDao.registarCliente(cli)) {
                        JOptionPane.showMessageDialog(this, "Registro de cliente correcto..", "Satisfactorio", JOptionPane.INFORMATION_MESSAGE);
                        txtNombreCliente.setText("");
                        txtNit.setText("");
                        txtFono.setText("");
                        txtCelular.setText("");
                        txtEmail.setText("");
                        txtDireccion.setText("");
                        comboCredito.setSelectedIndex(0);
                        txtPlazoCredito.setText("0");

                        btnGuardarU.setEnabled(false);
                        btnActU.setEnabled(true);
                        btnEliminarU.setEnabled(true);
                        btnNuevoU.setText("Nuevo");

                        listarClientes();
                    }
                }

            } else {
                JOptionPane.showMessageDialog(null, "Seleccione el campo credito..!!", "Mensaje..::..", JOptionPane.ERROR_MESSAGE);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error" + e.getMessage(), null, JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnGuardarUActionPerformed

    private void btnActUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActUActionPerformed
        // TODO add your handling code here:
        try {

            if (tablaClientes.getSelectedRows().length != 0) {

                if (txtNombreCliente.getText().length() == 0) {
                    JOptionPane.showMessageDialog(null, "Ingrese el nombre del cliente", "Mensaje..::..", JOptionPane.ERROR_MESSAGE);
                    txtNombreCliente.requestFocusInWindow();
                    return;
                }
                if (txtNit.getText().length() == 0) {
                    JOptionPane.showMessageDialog(null, "Ingrese el CI o NIT del cliente..!!", "Mensaje..::..", JOptionPane.ERROR_MESSAGE);
                    txtNit.requestFocusInWindow();
                    return;
                }

                if (comboCredito.getSelectedIndex() == 0) {
                    JOptionPane.showMessageDialog(null, "Selecione el campo credito..!!", "Mensaje..::..", JOptionPane.ERROR_MESSAGE);
                    comboCredito.requestFocusInWindow();
                    return;
                }

                Cliente cli = this.getObjCliente();

                if (comboCredito.getSelectedIndex() > 0) {
                    if (comboCredito.getSelectedItem().equals("SI")) {
                        if (txtPlazoCredito.getText().length() > 0) {
                            if (Integer.parseInt(txtPlazoCredito.getText()) > 0) {
                                //REGISTRO DE LOS DATOS
                                clienteDao cliDao = new clienteDao();

                                cli.setNombre(txtNombreCliente.getText());//nombre cliente
                                cli.setCi(txtNit.getText());//ci/Nit del cliente
                                cli.setTelefono(txtFono.getText());//telefono
                                cli.setCelContacto(txtCelular.getText());//celular
                                cli.setEmail(txtEmail.getText());//email
                                cli.setDireccion(txtDireccion.getText());//direccion
                                cli.setCredito(comboCredito.getSelectedItem().toString());//credito
                                cli.setPlazo(txtPlazoCredito.getText());
                                cli.setEstado(comboEstado.getSelectedItem().toString());

                                if (cliDao.actualizarCliente(cli)) {
                                    JOptionPane.showMessageDialog(this, "Actualización de datos satisfactorio..!!", "Satisfactorio", JOptionPane.INFORMATION_MESSAGE);
                                    txtNombreCliente.setText("");
                                    txtNit.setText("");
                                    txtFono.setText("");
                                    txtCelular.setText("");
                                    txtEmail.setText("");
                                    txtDireccion.setText("");
                                    comboCredito.setSelectedIndex(0);
                                    txtPlazoCredito.setText("0");

                                    btnGuardarU.setEnabled(false);
                                    btnActU.setEnabled(true);
                                    btnEliminarU.setEnabled(true);
                                    btnNuevoU.setText("Nuevo");

                                    listarClientes();
                                }

                            } else {
                                JOptionPane.showMessageDialog(null, "El plazo no puede ser cero", "Mensaje..::..", JOptionPane.ERROR_MESSAGE);
                            }

                        } else {
                            JOptionPane.showMessageDialog(null, "Ingrese el campo plazo de credito..!!", "Mensaje..::..", JOptionPane.ERROR_MESSAGE);
                        }

                    } else {
                        //REGISTRO CUANDO NO TIENE CREDITO
                        clienteDao cliDao = new clienteDao();

                        cli.setNombre(txtNombreCliente.getText());//nombre cliente
                        cli.setCi(txtNit.getText());//ci/Nit del cliente
                        cli.setTelefono(txtFono.getText());//telefono
                        cli.setCelContacto(txtCelular.getText());//celular
                        cli.setEmail(txtEmail.getText());//email
                        cli.setDireccion(txtDireccion.getText());//direccion
                        cli.setCredito(comboCredito.getSelectedItem().toString());//credito
                        cli.setPlazo(txtPlazoCredito.getText());
                        cli.setEstado(comboEstado.getSelectedItem().toString());

                        if (cliDao.actualizarCliente(cli)) {
                            JOptionPane.showMessageDialog(this, "Actualización de datos satisfactorio..!!", "Satisfactorio", JOptionPane.INFORMATION_MESSAGE);
                            txtNombreCliente.setText("");
                            txtNit.setText("");
                            txtFono.setText("");
                            txtCelular.setText("");
                            txtEmail.setText("");
                            txtDireccion.setText("");
                            comboCredito.setSelectedIndex(0);
                            txtPlazoCredito.setText("0");

                            btnGuardarU.setEnabled(false);
                            btnActU.setEnabled(true);
                            btnEliminarU.setEnabled(true);
                            btnNuevoU.setText("Nuevo");

                            listarClientes();
                        }
                    }

                } else {
                    JOptionPane.showMessageDialog(null, "Seleccione el campo credito..!!", "Mensaje..::..", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Seleccione un registro de la tabla..!!", "Mensaje", JOptionPane.ERROR_MESSAGE);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error" + e.getMessage(), "Falla", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnActUActionPerformed

    private void btnEliminarUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarUActionPerformed
        // TODO add your handling code here:
        if (tablaClientes.getSelectedRows().length != 0) {
            int y = JOptionPane.showConfirmDialog(null, "Esta seguro de eliminar el registro?");
            try {
                if (y == JOptionPane.YES_OPTION) {
                    clienteDao pgDao = new clienteDao();
                    if (pgDao.eliminarCliente(this.getObjCliente())) {
                        JOptionPane.showMessageDialog(this, "Eliminacion correcta", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                        limpiarCampos();
                        listarClientes();
                    }
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Error al eliminar el registro" + ex.getMessage(), "Mensaje::..::", JOptionPane.ERROR_MESSAGE);
            }

        } else {
            JOptionPane.showMessageDialog(this, "Seleccione un cliente\na eliminar..!!", "Mensaje", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarUActionPerformed

    private void btnNuevoUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoUActionPerformed
        // TODO add your handling code here:
        if (btnNuevoU.isSelected()) {
            txtNombreCliente.setText("");
            txtNit.setText("");
            txtFono.setText("");
            txtCelular.setText("");
            txtEmail.setText("");
            txtDireccion.setText("");
            txtPlazoCredito.setText("0");
            comboCredito.setSelectedIndex(0);

            txtNombreCliente.setEnabled(true);
            txtNit.setEnabled(true);
            txtFono.setEnabled(true);
            txtCelular.setEnabled(true);
            txtEmail.setEnabled(true);
            txtDireccion.setEnabled(true);
            comboCredito.setEnabled(true);
            txtPlazoCredito.setEnabled(true);

            btnEliminarU.setEnabled(false);
            btnActU.setEnabled(false);
            btnNuevoU.setText("Cancelar");
            btnGuardarU.setEnabled(true);
        } else {
            btnNuevoU.setText("Nuevo");

            txtNit.setText("");
            btnGuardarU.setEnabled(false);
            btnEliminarU.setEnabled(true);
            btnActU.setEnabled(true);
        }
    }//GEN-LAST:event_btnNuevoUActionPerformed

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        // TODO add your handling code here:
        this.dispose();
        validaVentana = null;
    }//GEN-LAST:event_formInternalFrameClosing

    private void comboCreditoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboCreditoItemStateChanged
        // TODO add your handling code here:
        if (comboCredito.getSelectedItem().equals("SI")) {
            txtPlazoCredito.setEnabled(true);
        } else {
            txtPlazoCredito.setEnabled(false);
            txtPlazoCredito.setText("0");
        }
    }//GEN-LAST:event_comboCreditoItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActU;
    private javax.swing.JButton btnEliminarU;
    private javax.swing.JButton btnGuardarU;
    private javax.swing.JToggleButton btnNuevoU;
    private javax.swing.JComboBox comboCredito;
    private javax.swing.JComboBox comboEstado;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel labelUsuario1;
    private javax.swing.JTable tablaClientes;
    private javax.swing.JTextField txtCelular;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFono;
    private javax.swing.JTextField txtNit;
    private javax.swing.JTextField txtNombreCliente;
    private javax.swing.JTextField txtPlazoCredito;
    // End of variables declaration//GEN-END:variables

    public Cliente getObjCliente() {
        return ObjCliente;
    }

    public void setObjCliente(Cliente ObjCliente) {
        this.ObjCliente = ObjCliente;
    }
}
